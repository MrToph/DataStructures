/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _ArrayMultiDim = __webpack_require__(2);
	
	var _ArrayMultiDim2 = _interopRequireDefault(_ArrayMultiDim);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// import MathContainer from './MathContainer';
	// import Stepper from './Stepper';
	
	var tests = new _ArrayMultiDim.ArrayMultiDimTests();
	tests.run();

/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ArrayMultiDim = function () {
	  function ArrayMultiDim(sizes) {
	    _classCallCheck(this, ArrayMultiDim);
	
	    if (!Array.isArray(sizes) || sizes.length < 1) throw new Error('not an array or array does not have any dimensions');
	    var size = sizes.reduce(function (acc, x) {
	      return acc * x;
	    }, 1); // multiply all dimension sizes
	    this.sizes = sizes;
	    this.size = size;
	    this.arr = new Array(size);
	    this.precomputeAccessValues();
	  }
	
	  _createClass(ArrayMultiDim, [{
	    key: 'get',
	    value: function get(indices) {
	      return this.arr[this.layoutMap(indices)];
	    }
	  }, {
	    key: 'set',
	    value: function set(indices, value) {
	      this.arr[this.layoutMap(indices)] = value;
	    }
	  }, {
	    key: 'precomputeAccessValues',
	    value: function precomputeAccessValues() {
	      this.products = new Array(this.sizes.length).fill(1); // initialize with 1 everywhere
	      // last index does not need to be multiplied
	      for (var i = this.products.length - 2; i >= 0; i--) {
	        this.products[i] *= this.sizes[i + 1] * this.products[i + 1];
	      }
	    }
	
	    // row major, i.e. last dimension contiguous
	
	  }, {
	    key: 'layoutMap',
	    value: function layoutMap(indices) {
	      var _this = this;
	
	      if (indices.length !== this.sizes.length) throw new Error('indices is of wrong length');
	      if (!indices.reduce(function (acc, val, index) {
	        return acc && val >= 0 && val < _this.sizes[index];
	      }, true)) throw new Error('some index is out of bounds');
	      return indices.reduce(function (acc, val, index) {
	        return acc + val * _this.products[index];
	      }, 0);
	    }
	  }]);
	
	  return ArrayMultiDim;
	}();
	
	exports.default = ArrayMultiDim;
	;
	
	var ArrayMultiDimTests = exports.ArrayMultiDimTests = function () {
	  function ArrayMultiDimTests() {
	    _classCallCheck(this, ArrayMultiDimTests);
	  }
	
	  _createClass(ArrayMultiDimTests, [{
	    key: 'run',
	    value: function run() {
	      try {
	        var _arr = new ArrayMultiDim([]);
	        console.log('Failed');
	      } catch (e) {
	        console.log('Passed. ' + e);
	      }
	
	      try {
	        var _arr2 = new ArrayMultiDim('hello');
	        console.log('Failed');
	      } catch (e) {
	        console.log('Passed. ' + e);
	      }
	
	      try {
	        var _arr3 = new ArrayMultiDim([5]);
	        _arr3.get([5]);
	        console.log('Failed');
	      } catch (e) {
	        console.log('Passed. ' + e);
	      }
	
	      try {
	        var _arr4 = new ArrayMultiDim([3, 5, 4]);
	        _arr4.get([5]);
	        console.log('Failed');
	      } catch (e) {
	        console.log('Passed. ' + e);
	      }
	
	      var arr = new ArrayMultiDim([3, 5, 4]);
	      var c = 0;
	      for (var i = 0; i < arr.sizes[0]; i++) {
	        for (var j = 0; j < arr.sizes[1]; j++) {
	          for (var k = 0; k < arr.sizes[2]; k++) {
	            arr.set([i, j, k], c++);
	          }
	        }
	      }
	      console.log(arr.products);
	      console.log(arr.get([2, 2, 2]));
	    }
	  }]);
	
	  return ArrayMultiDimTests;
	}();
	
	;

/***/ }
/******/ ]);
//# sourceMappingURL=all.min.js.map